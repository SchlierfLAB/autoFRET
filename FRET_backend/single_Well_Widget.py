# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'slider_widget.ui'
#
# Created by: PyQt5 UI code generator 5.15.3
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from FRET_backend.mplwidget import MplWidget


class Ui_MainWindow_Single_Well(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 677)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        self.leftComboBox = QtWidgets.QComboBox(self.centralwidget)
        self.leftComboBox.setGeometry(QtCore.QRect(10, 0, 201, 32))
        self.leftComboBox.setObjectName("leftComboBox")
        self.leftComboBox.addItem("")
        self.leftComboBox.addItem("")
        self.leftComboBox.addItem("")
        self.leftComboBox.addItem("")
        self.leftComboBox.addItem("")
        self.leftComboBox.addItem("")
        self.leftComboBox.addItem("")
        self.leftComboBox.addItem("")

        self.layoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.layoutWidget.setGeometry(QtCore.QRect(10, 50, 750, 468))
        self.layoutWidget.setObjectName("layoutWidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.layoutWidget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.leftGraphLayout = QtWidgets.QVBoxLayout()
        self.leftGraphLayout.setObjectName("leftGraphLayout")
        self.leftGraph = MplWidget(self.layoutWidget)
        self.leftGraph.setObjectName("leftGraph")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.leftGraph)
        self.verticalLayout.setObjectName("verticalLayout")
        self.leftGraphLayout.addWidget(self.leftGraph)
        self.horizontalLayout.addLayout(self.leftGraphLayout)

        self.leftExtractButton = QtWidgets.QPushButton(self.centralwidget)
        self.leftExtractButton.setGeometry(QtCore.QRect(680, 20, 112, 32))
        self.leftExtractButton.setObjectName("leftExtractButton")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1034, 22))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuTools = QtWidgets.QMenu(self.menubar)
        self.menuTools.setObjectName("menuTools")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionOpen = QtWidgets.QAction(MainWindow)
        self.actionOpen.setObjectName("actionOpen")
        self.actionExtractRaw = QtWidgets.QAction(MainWindow)
        self.actionExtractRaw.setObjectName("actionExtractRaw")
        self.menuFile.addAction(self.actionOpen)
        self.menuTools.addAction(self.actionExtractRaw)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuTools.menuAction())



        # settings importer
        self.actionImportSettings = QtWidgets.QAction(MainWindow)
        self.actionImportSettings.setObjectName("actionImportSettings")
        self.menuTools.addAction(self.actionImportSettings)

        # get settings window back
        self.actionGetSettingsBack = QtWidgets.QAction(MainWindow)
        self.actionGetSettingsBack.setObjectName('actionGetSettingsBack')
        self.menuTools.addAction(self.actionGetSettingsBack)

        # switch to single view
        self.actionSwitchSingle = QtWidgets.QAction(MainWindow)
        self.actionSwitchSingle.setObjectName('actionSwitchSingle')
        self.menuTools.addAction(self.actionSwitchSingle)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))

        self.leftComboBox.setItemText(0, _translate("MainWindow", "E histogram"))
        self.leftComboBox.setItemText(1, _translate("MainWindow", "S vs. E"))
        self.leftComboBox.setItemText(2, _translate("MainWindow", "E vs. Tau(D(A))"))
        self.leftComboBox.setItemText(3, _translate("MainWindow", "Tau(D(A)/D(0)) vs. E"))
        self.leftComboBox.setItemText(4, _translate("MainWindow", "E vs. Tau(A)"))
        self.leftComboBox.setItemText(5, _translate("MainWindow", "FRET2CDE vs. E"))
        self.leftComboBox.setItemText(6, _translate("MainWindow", "rGG vs. E"))
        self.leftComboBox.setItemText(7, _translate("MainWindow", "rRR vs. E"))

        self.leftExtractButton.setText(_translate("MainWindow", "Save Data"))

        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuTools.setTitle(_translate("MainWindow", "Tools"))
        self.actionOpen.setText(_translate("MainWindow", "Open folder"))
        self.actionExtractRaw.setText(_translate("MainWindow", "Extract Raw Data"))

        self.actionImportSettings.setText(_translate("MainWindow", "Import Settings File"))
        self.actionGetSettingsBack.setText(_translate("MainWindow", "Dock Settings Window"))
        self.actionSwitchSingle.setText(_translate("MainWindow", "Switch to Multi Well"))

    # function to create user warnings
    def user_warning(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        # Message box for User Error Information
        self.msg = QtWidgets.QMessageBox(MainWindow)
        self.crit_icon = QtWidgets.QMessageBox.Critical
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow_Single_Well()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
